{"version":3,"sources":["components/Warehouse.js","components/SKU.js","resources/database.js","App.js","serviceWorker.js","index.js"],"names":["Warehouse","props","openModal","e","setState","modalTambahGudang","tutupModal","fields","errors","handleValidation","state","formIsValid","data","map","gudang","id_gudang","parseInt","gudangSubmit","kapasitas_maks","terisi","tersisa","isi_gudang","addGudang","activePage","field","this","target","value","undefined","Card","fluid","color","link","Content","Header","textAlign","Button","basic","onClick","Table","selectable","singleLine","Row","HeaderCell","width","Body","slice","index","key","Cell","Label","ribbon","Footer","colSpan","Pagination","floated","boundaryRange","defaultActivePage","ellipsisItem","firstItem","lastItem","siblingRange","totalPages","length","onPageChange","Modal","open","closeOnEscape","closeOnDimmerClick","size","Description","Form","Field","Input","label","placeholder","onChange","handleChange","bind","error","content","min","type","Actions","Icon","name","Component","SKU","toggleModal","modalRincian","toggleModalTambahSKU","modalTambahSKU","gudangOptions","sku","stok","toggleModalAmbilSKU","modalAmbilSKU","skuOptions","handleValidationSKU","indexGudang","findIndex","element","toString","handleValidationAmbilSKU","indexSKU","list_gudang","SKUTambahSubmit","addStok","SKUAmbilSubmit","ambilStok","listSKU","grupSKU","includes","indexEl","tempArray","push","text","activeIndex","listGudang","celled","Dropdown","search","selection","options","defaultValue","pointing","Fragment","database","JSON","parse","localStorage","getItem","App","handleItemClick","activeItem","gudangBaru","saveLocal","stokBaru","stokAmbil","splice","window","location","pathname","Object","assign","setItem","stringify","basename","Container","Menu","secondary","Item","active","as","Link","to","icon","path","exact","centered","style","image","header","meta","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7e62b2b9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport {Label, Table, Pagination, Icon, Button, Card, Modal, Form} from 'semantic-ui-react';\n\nclass Warehouse extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalTambahGudang : false,\n      fields: {},\n      errors: {},\n      activePage : 1\n    }\n  }\n\n  openModal = (e) => this.setState({\n      modalTambahGudang : true\n    })\n\n  tutupModal = (e) => this.setState({\n      fields : {},\n      errors : {},\n      modalTambahGudang : false\n    })\n\n  handleValidation = () => {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Id Gudang\n    if(!fields[\"id_gudang\"]){\n      formIsValid = false;\n      errors[\"id_gudang\"] = \"Tidak Boleh Kosong\";\n    }else{\n      // eslint-disable-next-line array-callback-return\n      this.props.data.map(gudang => {\n        if(gudang.id_gudang === fields[\"id_gudang\"]){\n          formIsValid = false;\n          errors[\"id_gudang\"] = \"Nomor gudang sudah ada\"\n        }\n      })\n    }\n\n    //Kapasitas Maksimal\n    if(!fields[\"kapasitas_maks\"]){\n      formIsValid = false;\n      errors[\"kapasitas_maks\"] = \"Tidak Boleh Kosong\";\n    }else{\n      if(parseInt(fields[\"kapasitas_maks\"])<1){\n        formIsValid = false;\n        errors[\"kapasitas_maks\"] = \"Kapasitas tidak boleh kurang dari 1\";\n      }\n    }\n\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\n  gudangSubmit = () => {\n    // e.preventDefault();\n\n    if(this.handleValidation()){\n      let data =   {\n        id_gudang      : this.state.fields.id_gudang,\n        kapasitas_maks : this.state.fields.kapasitas_maks,\n        terisi         : this.state.fields.kapasitas_maks,\n        tersisa        : this.state.fields.kapasitas_maks,\n        isi_gudang     : []\n      }\n      this.setState({\n        fields            : {},\n        errors            : {},\n        modalTambahGudang : false\n      })\n      this.props.addGudang(data);\n    }\n  }\n\n  handleChange(field, e){\n    let fields = this.state.fields;\n    let errors = this.state.errors;\n    fields[field] = e.target.value;\n    errors[field] = undefined;\n    this.setState({fields, errors});\n  }\n\n  render() {\n    const {data} = this.props\n    const {modalTambahGudang, fields, errors, activePage} = this.state\n    return (\n        <Card fluid color='teal' link>\n          <Card.Content>\n            <Card.Header textAlign='center'>Warehouse</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Button basic color='teal' onClick={this.openModal}>Tambah Gudang</Button>\n            <Table color='teal' selectable singleLine>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width='2'>Gudang</Table.HeaderCell>\n                  <Table.HeaderCell width='1'>Kapasitas Maksimal</Table.HeaderCell>\n                  <Table.HeaderCell width='1'>Terisi</Table.HeaderCell>\n                  <Table.HeaderCell width='1'>Tersisa</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {\n                  data.slice(5*(activePage-1),5*(activePage-1)+5).map((gudang, index)=>\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Label ribbon color='teal'>{gudang.id_gudang}</Label>\n                      </Table.Cell>\n                      <Table.Cell>{gudang.kapasitas_maks}</Table.Cell>\n                      <Table.Cell>{gudang.terisi}</Table.Cell>\n                      <Table.Cell>{gudang.tersisa}</Table.Cell>\n                    </Table.Row>\n                  )\n                }\n              </Table.Body>\n\n              <Table.Footer>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='4'>\n                    <Pagination color='teal' floated='right'\n                                boundaryRange={0}\n                                defaultActivePage={1}\n                                ellipsisItem={null}\n                                firstItem={null}\n                                lastItem={null}\n                                siblingRange={1}\n                                totalPages={data.length/5} onPageChange={(e, {activePage})=>{\n                                  this.setState({\n                                    activePage : activePage\n                                  })\n                    }}/>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Footer>\n            </Table>\n          </Card.Content>\n          <Modal\n            open={modalTambahGudang}\n            closeOnEscape={true}\n            closeOnDimmerClick={false}\n            size='tiny'\n          >\n            <Modal.Header>Tambah Gudang</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <Form>\n                  <Form.Field>\n                    <Form.Input\n                      label='Nomor Gudang'\n                      placeholder='Nomor Gudang'\n                      onChange={this.handleChange.bind(this, \"id_gudang\")}\n                      error={errors['id_gudang'] !== undefined ? { content: errors['id_gudang'] } : false}\n                      value={fields[\"id_gudang\"]} />\n                  </Form.Field>\n                  <Form.Field>\n                    <Form.Input\n                      label='Kapasitas Maksimal'\n                      min='1'\n                      type='number'\n                      placeholder='Kapasitas Gudang'\n                      onChange={this.handleChange.bind(this, \"kapasitas_maks\")}\n                      error={ errors['kapasitas_maks'] !== undefined ? { content: errors['kapasitas_maks'] } : false}\n                      value={fields[\"kapasitas_maks\"]} />\n                  </Form.Field>\n                </Form>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='red' onClick={this.tutupModal}>\n                <Icon name='remove' /> Batal\n              </Button>\n              <Button color='green' onClick={this.gudangSubmit}>\n                <Icon name='checkmark' /> Tambah\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Card>\n    );\n  }\n}\n\nexport default Warehouse;\n","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport {Label, Table, Icon, Card, Button, Modal, Form, Dropdown, Pagination} from 'semantic-ui-react';\n\nclass SKU extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0,\n      modalRincian : false,\n      modalTambahSKU : false,\n      modalAmbilSKU : false,\n      fields : {},\n      errors : {},\n      activePage : 1,\n      sku : {\n        sku : '0',\n        listGudang : []\n      }\n    }\n  }\n\n  toggleModal = (e) => this.setState({modalRincian:!this.state.modalRincian})\n  toggleModalTambahSKU = (e) => this.setState({modalTambahSKU:!this.state.modalTambahSKU, fields: { id_gudang : this.gudangOptions[0].value, sku : '', stok: ''}, errors : {}})\n  toggleModalAmbilSKU = (e) => this.setState({modalAmbilSKU:!this.state.modalAmbilSKU, fields: { id_gudang : this.gudangOptions[0].value, sku : this.skuOptions[0].value, stok: ''}, errors : {}})\n\n  handleChange(field, e){\n    let fields = this.state.fields;\n    let errors = this.state.errors;\n    fields[field] = e.target.value;\n    errors[field] = undefined;\n    this.setState({fields, errors});\n  }\n\n  handleValidationSKU = () => {\n    let fields = this.state.fields\n    let errors = {}\n    let formIsValid = true\n    //Id Gudang\n    if(!fields[\"sku\"]){\n      formIsValid = false;\n      errors[\"sku\"] = \"Tidak Boleh Kosong\"\n    }\n\n    //Kapasitas Maksimal\n    if(!fields[\"stok\"]){\n      formIsValid = false\n      errors[\"stok\"] = \"Tidak Boleh Kosong\"\n    }else{\n      let indexGudang = this.props.data.findIndex(element => element.id_gudang === fields.id_gudang )\n      if(parseInt(fields[\"stok\"])<1){\n        formIsValid = false;\n        errors[\"stok\"] = \"Stok 1\"\n      }\n      else if(parseInt(fields[\"stok\"])>this.props.data[indexGudang].tersisa){\n        formIsValid = false;\n        errors[\"stok\"] = \"Kapasitas tersisa gudang \" + this.props.data[indexGudang].tersisa.toString() + \", silahkan memilih gudang lainnya atau mengurangi stok\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\n  handleValidationAmbilSKU = () => {\n    let fields = this.state.fields\n    let errors = {}\n    let formIsValid = true\n\n    //Stok\n    if(!fields[\"stok\"]){\n      formIsValid = false\n      errors[\"stok\"] = \"Tidak Boleh Kosong\"\n    }else{\n      let indexSKU = this.data().findIndex(element => element.sku === fields.sku )\n      let indexGudang = this.data()[indexSKU].list_gudang.findIndex(element => element.id_gudang === fields.id_gudang )\n      if(parseInt(fields[\"stok\"])<1){\n        formIsValid = false;\n        errors[\"stok\"] = \"Stok 1\"\n      }\n      else if(indexGudang<0){\n        formIsValid = false;\n        errors[\"id_gudang\"] = \"Gudang yang anda pilih tidak memiliki stok \"+ fields['sku'] +\", silahkan pilih gudang lainnya\"\n      }\n      else if(parseInt(fields[\"stok\"])>this.data()[indexSKU].list_gudang[indexGudang].stok){\n        formIsValid = false;\n        errors[\"stok\"] = \"Stok \"+ fields[\"sku\"]+\" pada gudang \"+ fields['id_gudang'] +\" hanya \" + this.data()[indexSKU].list_gudang[indexGudang].stok.toString() + \", silahkan memilih gudang lainnya atau mengurangi stok\"\n      }\n    }\n\n    this.setState({errors: errors});\n    return formIsValid;\n  }\n\n\n  SKUTambahSubmit = () => {\n    // e.preventDefault();\n\n    if(this.handleValidationSKU()){\n      let data =   {\n        id_gudang      : this.state.fields.id_gudang,\n        stok           : this.state.fields.stok,\n        sku            : this.state.fields.sku\n      }\n      this.setState({\n        fields            : {},\n        errors            : {},\n        modalTambahSKU    : false\n      })\n      this.props.addStok(data);\n    }\n  }\n  SKUAmbilSubmit = () => {\n    // e.preventDefault();\n\n    if(this.handleValidationAmbilSKU()){\n      let data =   {\n        id_gudang      : this.state.fields.id_gudang,\n        stok           : this.state.fields.stok,\n        sku            : this.state.fields.sku\n      }\n      this.setState({\n        fields            : {},\n        errors            : {},\n        modalAmbilSKU     : false\n      })\n      this.props.ambilStok(data);\n    }\n  }\n\n  data = () => {\n    let listSKU = []\n    let grupSKU = []\n    // eslint-disable-next-line array-callback-return\n    this.props.data.map(gudang => {\n      // eslint-disable-next-line array-callback-return\n      gudang.isi_gudang.map(sku => {\n        if(grupSKU.includes(sku.sku)){\n          let indexEl = listSKU.findIndex(element => element.sku === sku.sku )\n          let tempArray = [...listSKU]\n          tempArray[indexEl] = {...tempArray[indexEl], stok: tempArray[indexEl].stok + sku.stok}\n          tempArray[indexEl] = {...tempArray[indexEl], list_gudang: [...tempArray[indexEl].list_gudang, { id_gudang : gudang.id_gudang, stok : sku.stok }]}\n          listSKU = [...tempArray]\n        }\n        else{\n          listSKU.push({...sku, list_gudang: [{ id_gudang : gudang.id_gudang, stok : sku.stok }]})\n          grupSKU.push(sku.sku)\n        }\n      })\n    })\n    return listSKU\n  }\n\n  gudangOptions = this.props.data.map((gudang) => ({\n    key: gudang.id_gudang,\n    text: gudang.id_gudang,\n    value: gudang.id_gudang,\n  }))\n\n  skuOptions = this.data().map((sku) => ({\n    key: sku.sku,\n    text: sku.sku,\n    value: sku.sku,\n  }))\n\n  render() {\n    const {sku, modalRincian, errors, fields, modalTambahSKU, modalAmbilSKU, activePage} = this.state\n    return (\n        <Card fluid color='teal' link>\n          <Card.Content>\n            <Card.Header textAlign='center'>Stok SKU</Card.Header>\n          </Card.Content>\n          <Card.Content>\n\n            <Button basic color='teal' onClick={this.toggleModalTambahSKU}>\n              Tambah Stok SKU\n            </Button>\n            <Button basic color='red' onClick={this.toggleModalAmbilSKU}>\n              Ambil Stok SKU\n            </Button>\n\n            <Table color='teal' selectable singleLine>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell width='3'>SKU</Table.HeaderCell>\n                  <Table.HeaderCell width='1'>Stok</Table.HeaderCell>\n                  <Table.HeaderCell width='1'>Aksi</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n              <Table.Body>\n                {\n                  this.data().slice(5*(activePage-1),5*(activePage-1)+5).map((e, index)=>\n                    <Table.Row key={index}>\n                      <Table.Cell>\n                        <Label ribbon color='teal'>{e.sku}</Label>\n                      </Table.Cell>\n                      <Table.Cell>{e.stok}</Table.Cell>\n                      <Table.Cell>\n                        <Button basic color='teal' onClick={()=>{\n                          this.toggleModal()\n                          this.setState({\n                            sku : {\n                              sku : e.sku,\n                              listGudang : [...e.list_gudang]\n                            }\n                          })\n                        }}>\n                          Rincian\n                        </Button>\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                }\n              </Table.Body>\n\n              <Table.Footer>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='3'>\n                    <Pagination color='teal' floated='right'\n                                boundaryRange={0}\n                                defaultActivePage={1}\n                                ellipsisItem={null}\n                                firstItem={null}\n                                lastItem={null}\n                                siblingRange={1}\n                                totalPages={this.data().length/5} onPageChange={(e, {activePage})=>{\n                      this.setState({\n                        activePage : activePage\n                      })\n                    }}/>\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Footer>\n            </Table>\n          </Card.Content>\n          <Modal\n            size='tiny'\n            open={modalRincian}\n          >\n            <Modal.Header>Rincian {sku.sku}</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <Table celled>\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell width='1'>Gudang</Table.HeaderCell>\n                      <Table.HeaderCell width='1'>Stok</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n\n                  <Table.Body>\n                    {\n                      sku.listGudang.map((gudang, index)=>\n                        <Table.Row key={index}>\n                          <Table.Cell>\n                            {gudang.id_gudang}\n                          </Table.Cell>\n                          <Table.Cell>\n                            {gudang.stok}\n                          </Table.Cell>\n                        </Table.Row>\n                      )\n                    }\n                  </Table.Body>\n                </Table>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='red' onClick={this.toggleModal}>\n                <Icon name='remove' /> Tutup\n              </Button>\n            </Modal.Actions>\n          </Modal>\n          <Modal\n            open={modalTambahSKU}\n            size='tiny'\n          >\n            <Modal.Header>Tambah Stok SKU</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <Form>\n                  <Form.Field>\n                    <Form.Input\n                      label='SKU'\n                      placeholder='SKU'\n                      onChange={this.handleChange.bind(this, \"sku\")}\n                      error={errors['sku'] !== undefined ? { content: errors['sku'] } : false}\n                      value={fields[\"sku\"]} />\n                  </Form.Field>\n                  <Form.Field>\n                    <Form.Input\n                      label='Stok'\n                      min='1'\n                      type='number'\n                      placeholder='Stok'\n                      onChange={this.handleChange.bind(this, \"stok\")}\n                      error={ errors['stok'] !== undefined ? { content: errors['stok'] } : false}\n                      value={fields[\"stok\"]} />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Nomor Gudang</label>\n                    <Dropdown placeholder='Nomor Gudang' error={errors['id_gudang'] !== undefined} search selection options={this.gudangOptions} defaultValue={this.gudangOptions[0].value} onChange={(e, {value}) => {\n                      let fields = this.state.fields\n                      let errors = this.state.errors\n                      fields['id_gudang'] = value\n                      errors['id_gudang'] = undefined\n                      this.setState({fields,errors})\n                    }}/>\n                    {\n                      errors['id_gudang'] !== undefined ? (\n                        <Label basic color='red' pointing>\n                          {errors['id_gudang']}\n                        </Label>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )\n                    }\n                  </Form.Field>\n                </Form>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='red' onClick={this.toggleModalTambahSKU}>\n                <Icon name='remove' /> Batal\n              </Button>\n              <Button color='green' onClick={this.SKUTambahSubmit}>\n                <Icon name='checkmark' /> Tambah\n              </Button>\n            </Modal.Actions>\n          </Modal>\n          <Modal\n            open={modalAmbilSKU}\n            size='tiny'\n          >\n            <Modal.Header>Ambil Stok SKU</Modal.Header>\n            <Modal.Content>\n              <Modal.Description>\n                <Form>\n                  <Form.Field>\n                    <label>SKU</label>\n                    <Dropdown placeholder='SKU' error={errors['sku'] !== undefined} search selection options={this.skuOptions} defaultValue={this.skuOptions[0].value} onChange={(e, { value }) => {\n                      let fields = this.state.fields\n                      let errors = this.state.errors\n                      fields['sku'] = value\n                      errors['sku'] = undefined\n                      this.setState({fields,errors})\n                    }}/>\n                    {\n                      errors['sku'] !== undefined ? (\n                        <Label basic color='red' pointing>\n                          {errors['sku']}\n                        </Label>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )\n                    }\n                  </Form.Field>\n                  <Form.Field>\n                    <Form.Input\n                      label='Stok'\n                      min='1'\n                      type='number'\n                      placeholder='Stok'\n                      onChange={this.handleChange.bind(this, \"stok\")}\n                      error={ errors['stok'] !== undefined ? { content: errors['stok'] } : false}\n                      value={fields[\"stok\"]} />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Nomor Gudang</label>\n                    <Dropdown placeholder='Nomor Gudang' error={errors['id_gudang'] !== undefined} search selection options={this.gudangOptions} defaultValue={this.gudangOptions[0].value} onChange={(e, { value }) => {\n                      let fields = this.state.fields\n                      let errors = this.state.errors\n                      fields['id_gudang'] = value\n                      errors['id_gudang'] = undefined\n                      this.setState({fields,errors})\n                    }}/>\n                    {\n                      errors['id_gudang'] !== undefined ? (\n                        <Label basic color='red' pointing>\n                          {errors['id_gudang']}\n                        </Label>\n                      ) : (\n                        <React.Fragment></React.Fragment>\n                      )\n                    }\n                  </Form.Field>\n                </Form>\n              </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n              <Button color='red' onClick={this.toggleModalAmbilSKU}>\n                <Icon name='remove' /> Batal\n              </Button>\n              <Button color='green' onClick={this.SKUAmbilSubmit}>\n                <Icon name='checkmark' /> Ambil\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Card>\n    );\n  }\n}\n\nexport default SKU;\n","let database = JSON.parse(localStorage.getItem(\"data_warehouse\")) || [\n  {\n    'id_gudang'      : '001',\n    'kapasitas_maks' : 500,\n    'terisi'         : 200,\n    'tersisa'        : 300,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 100\n      },\n      {\n        'sku'  : 'SKU002',\n        'stok' : 100\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '002',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '003',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '004',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '005',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '006',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  },\n  {\n    'id_gudang'      : '007',\n    'kapasitas_maks' : 500,\n    'terisi'         : 100,\n    'tersisa'        : 400,\n    'isi_gudang' : [\n      {\n        'sku'  : 'SKU001',\n        'stok' : 30\n      },\n      {\n        'sku'  : 'SKU003',\n        'stok' : 70\n      }\n    ]\n  }\n]\nexport default database","import React, {Component} from 'react';\nimport {HashRouter as Router, Route, Link} from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Warehouse from \"./components/Warehouse\";\nimport SKU from \"./components/SKU\";\nimport database from \"./resources/database\";\nimport {Container, Header, Menu, Card} from 'semantic-ui-react';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      'activeItem' : window.location.pathname === '/' ? 'home' : window.location.pathname.slice(1),\n      'data'       : Object.assign(database)\n    }\n    this.handleItemClick = this.handleItemClick.bind(this)\n  }\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  saveLocal(data){\n    localStorage.setItem(\"data_warehouse\", JSON.stringify(data))\n  }\n\n  addGudang = (gudangBaru) => {\n    this.saveLocal([...this.state.data, gudangBaru])\n    this.setState({\n      'data' : [...this.state.data, gudangBaru]\n    })\n  }\n\n  addStok = (stokBaru) => {\n    let indexGudang = this.state.data.findIndex(element => element.id_gudang === stokBaru.id_gudang )\n    let indexSKU = this.state.data[indexGudang].isi_gudang.findIndex(element => element.sku === stokBaru.sku )\n    let tempArray = [...this.state.data]\n    if(indexSKU<0)\n      tempArray[indexGudang].isi_gudang = [...tempArray[indexGudang].isi_gudang, {sku : stokBaru.sku, stok : parseInt(stokBaru.stok)}]\n    else\n      tempArray[indexGudang].isi_gudang[indexSKU].stok += parseInt(stokBaru.stok)\n    tempArray[indexGudang].terisi += parseInt(stokBaru.stok)\n    tempArray[indexGudang].tersisa -= parseInt(stokBaru.stok)\n\n    this.saveLocal([...tempArray])\n    this.setState({\n      'data' : [...tempArray]\n    },)\n  }\n\n  ambilStok = (stokAmbil) => {\n    let indexGudang = this.state.data.findIndex(element => element.id_gudang === stokAmbil.id_gudang )\n    let indexSKU = this.state.data[indexGudang].isi_gudang.findIndex(element => element.sku === stokAmbil.sku )\n    let tempArray = [...this.state.data]\n    if(tempArray[indexGudang].isi_gudang[indexSKU].stok === parseInt(stokAmbil.stok))\n      tempArray[indexGudang].isi_gudang.splice(indexSKU,1)\n    else\n      tempArray[indexGudang].isi_gudang[indexSKU].stok -= parseInt(stokAmbil.stok)\n    tempArray[indexGudang].terisi -= parseInt(stokAmbil.stok)\n    tempArray[indexGudang].tersisa += parseInt(stokAmbil.stok)\n\n    this.saveLocal([...tempArray])\n    this.setState({\n      'data' : [...tempArray]\n    })\n  }\n\n  render() {\n    const { activeItem, data } = this.state\n    return (\n      <Router basename='/'>\n          <Container>\n            <Menu pointing secondary color='teal'>\n              <Menu.Item\n                name='home'\n                active={activeItem === 'home'}\n                onClick={this.handleItemClick}\n                as={Link}\n                to={'/'}\n              />\n              <Menu.Item\n                name='warehouse'\n                active={activeItem === 'warehouse'}\n                onClick={this.handleItemClick}\n                as={Link}\n                to={'/warehouse'}\n              />\n              <Menu.Item\n                name='sku'\n                active={activeItem === 'sku'}\n                onClick={this.handleItemClick}\n                as={Link}\n                to={'/sku'}\n              />\n            </Menu>\n\n            <Header as='h1' icon textAlign='center'>\n              Simple Warehouse Management\n            </Header>\n\n              <Route path=\"/warehouse\">\n                <Warehouse data={data} addGudang={this.addGudang} />\n              </Route>\n              <Route path=\"/sku\">\n                <SKU data={data} addStok={this.addStok} ambilStok={this.ambilStok}/>\n              </Route>\n              <Route exact path=\"/\">\n                <Card link centered style={{width:'50%'}}\n                  image='https://image.freepik.com/free-vector/logistic-services-with-warehouse-building_24877-54384.jpg'\n                  header='By Rom'\n                  meta='Developer'\n                />\n                {/*<Image bordered centered rounded src={'https://image.freepik.com/free-vector/logistic-services-with-warehouse-building_24877-54384.jpg'}/>*/}\n                {/*<Header as='h4' textAlign='center'>*/}\n                {/*  By Rom*/}\n                {/*</Header>*/}\n              </Route>\n          </Container>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}